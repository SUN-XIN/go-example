// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types/client_server.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message
type SumRequest struct {
	ValInt1              int32    `protobuf:"varint,1,opt,name=valInt1,proto3" json:"valInt1,omitempty"`
	ValInt2              int32    `protobuf:"varint,2,opt,name=valInt2,proto3" json:"valInt2,omitempty"`
	ValString1           string   `protobuf:"bytes,3,opt,name=valString1,proto3" json:"valString1,omitempty"`
	ValString2           string   `protobuf:"bytes,4,opt,name=valString2,proto3" json:"valString2,omitempty"`
	ValFloat1            float32  `protobuf:"fixed32,5,opt,name=valFloat1,proto3" json:"valFloat1,omitempty"`
	ValFloat2            float32  `protobuf:"fixed32,6,opt,name=valFloat2,proto3" json:"valFloat2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_client_server_96fa2d31e7d1099b, []int{0}
}
func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (dst *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(dst, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetValInt1() int32 {
	if m != nil {
		return m.ValInt1
	}
	return 0
}

func (m *SumRequest) GetValInt2() int32 {
	if m != nil {
		return m.ValInt2
	}
	return 0
}

func (m *SumRequest) GetValString1() string {
	if m != nil {
		return m.ValString1
	}
	return ""
}

func (m *SumRequest) GetValString2() string {
	if m != nil {
		return m.ValString2
	}
	return ""
}

func (m *SumRequest) GetValFloat1() float32 {
	if m != nil {
		return m.ValFloat1
	}
	return 0
}

func (m *SumRequest) GetValFloat2() float32 {
	if m != nil {
		return m.ValFloat2
	}
	return 0
}

// The response message
type SumReply struct {
	ResInt               int32    `protobuf:"varint,1,opt,name=resInt,proto3" json:"resInt,omitempty"`
	ResString            string   `protobuf:"bytes,2,opt,name=resString,proto3" json:"resString,omitempty"`
	ResFloat             float32  `protobuf:"fixed32,3,opt,name=resFloat,proto3" json:"resFloat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumReply) Reset()         { *m = SumReply{} }
func (m *SumReply) String() string { return proto.CompactTextString(m) }
func (*SumReply) ProtoMessage()    {}
func (*SumReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_client_server_96fa2d31e7d1099b, []int{1}
}
func (m *SumReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumReply.Unmarshal(m, b)
}
func (m *SumReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumReply.Marshal(b, m, deterministic)
}
func (dst *SumReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumReply.Merge(dst, src)
}
func (m *SumReply) XXX_Size() int {
	return xxx_messageInfo_SumReply.Size(m)
}
func (m *SumReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SumReply.DiscardUnknown(m)
}

var xxx_messageInfo_SumReply proto.InternalMessageInfo

func (m *SumReply) GetResInt() int32 {
	if m != nil {
		return m.ResInt
	}
	return 0
}

func (m *SumReply) GetResString() string {
	if m != nil {
		return m.ResString
	}
	return ""
}

func (m *SumReply) GetResFloat() float32 {
	if m != nil {
		return m.ResFloat
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "types.SumRequest")
	proto.RegisterType((*SumReply)(nil), "types.SumReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SumClient is the client API for Sum service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SumClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumReply, error)
}

type sumClient struct {
	cc *grpc.ClientConn
}

func NewSumClient(cc *grpc.ClientConn) SumClient {
	return &sumClient{cc}
}

func (c *sumClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumReply, error) {
	out := new(SumReply)
	err := c.cc.Invoke(ctx, "/types.Sum/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SumServer is the server API for Sum service.
type SumServer interface {
	Sum(context.Context, *SumRequest) (*SumReply, error)
}

func RegisterSumServer(s *grpc.Server, srv SumServer) {
	s.RegisterService(&_Sum_serviceDesc, srv)
}

func _Sum_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Sum/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sum_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.Sum",
	HandlerType: (*SumServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _Sum_Sum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "types/client_server.proto",
}

func init() {
	proto.RegisterFile("types/client_server.proto", fileDescriptor_client_server_96fa2d31e7d1099b)
}

var fileDescriptor_client_server_96fa2d31e7d1099b = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x4d, 0xd7, 0xd6, 0xed, 0x5c, 0xc4, 0x1c, 0x24, 0x2e, 0x22, 0xa5, 0xa7, 0x82, 0x50,
	0xe9, 0xf8, 0x0e, 0xc2, 0x5e, 0xd3, 0xab, 0x20, 0x55, 0x06, 0x59, 0xc8, 0xb6, 0x35, 0x99, 0x16,
	0xfa, 0x6e, 0x3e, 0x9c, 0x98, 0x5d, 0x4d, 0x76, 0x4f, 0xe1, 0xff, 0x3f, 0x98, 0x7c, 0xfc, 0x70,
	0xc7, 0xcb, 0x48, 0xee, 0xe9, 0xc3, 0xec, 0xa8, 0xe7, 0x37, 0x47, 0x76, 0x26, 0x5b, 0x8f, 0x76,
	0xe0, 0x41, 0xa6, 0x1e, 0x95, 0xdf, 0x02, 0xa0, 0x9d, 0xf6, 0x9a, 0xbe, 0x26, 0x72, 0x2c, 0x15,
	0x5c, 0xcd, 0x9d, 0xd9, 0xf6, 0xdc, 0x28, 0x51, 0x88, 0x2a, 0xd5, 0x7f, 0x31, 0x10, 0x54, 0x49,
	0x4c, 0x50, 0x3e, 0x00, 0xcc, 0x9d, 0x69, 0xd9, 0xee, 0xfa, 0xcf, 0x46, 0xad, 0x0a, 0x51, 0xe5,
	0x3a, 0x6a, 0x4e, 0x38, 0xaa, 0xcb, 0x33, 0x8e, 0xf2, 0x1e, 0xf2, 0xb9, 0x33, 0x2f, 0x66, 0xe8,
	0xb8, 0x51, 0x69, 0x21, 0xaa, 0x44, 0x87, 0x22, 0xa6, 0xa8, 0xb2, 0x53, 0x8a, 0xe5, 0x2b, 0xac,
	0xbd, 0xfd, 0x68, 0x16, 0x79, 0x0b, 0x99, 0x25, 0xb7, 0xed, 0xf9, 0xa8, 0x7e, 0x4c, 0xbf, 0x17,
	0x2c, 0xb9, 0xc3, 0x6f, 0xde, 0x3d, 0xd7, 0xa1, 0x90, 0x1b, 0x58, 0x5b, 0x72, 0xfe, 0x9c, 0x77,
	0x4f, 0xf4, 0x7f, 0x46, 0x84, 0x55, 0x3b, 0xed, 0xe5, 0xe3, 0xe1, 0xb9, 0xa9, 0xfd, 0x64, 0x75,
	0x98, 0x6b, 0x73, 0x1d, 0x57, 0xa3, 0x59, 0xca, 0x8b, 0xf7, 0xcc, 0xcf, 0xfb, 0xfc, 0x13, 0x00,
	0x00, 0xff, 0xff, 0xec, 0xd4, 0x50, 0xe8, 0x7b, 0x01, 0x00, 0x00,
}
